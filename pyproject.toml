[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "swissgeol-boreholes-dataextraction"
version = "0.0.1-dev"
description = "Python project to analyse borehole profiles."
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "boto3==1.40.12",
    "pandas==2.3.1",
    "levenshtein==0.27.1",
    "python-dotenv==1.1.1",
    "setuptools==80.9.0",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "pydantic_settings==2.10.1",
    "pydantic==2.11.7",
    "httpx==0.28.1",
    "moto==5.1.10",
    "pillow==11.3.0",
    "mangum==0.19.0",
    "awslambdaric==3.1.1",
    "scikit-learn==1.7.1",
    "click==8.2.1",
    "PyYAML==6.0.2",
    "langdetect==1.0.9",
    "regex==2025.7.34",
    "backoff==2.2.1",
    "PyMuPDF==1.26.3",
    "opencv-python-headless==4.12.0.88",
    "quads==1.1.0",
    "numpy==2.2.6",
    "rtree==1.4.1",
    "nltk==3.9.1",
    "rdflib==7.1.4",
    "pyinstrument==5.1.1",
    "compound_split==1.0.2"
]

[project.optional-dependencies]
test = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
]
lint = [
    "pre-commit==4.3.0",
]
experiment-tracking = [
    "mlflow==3.2.0",
    "pygit2==1.18.2"
]
visualize = [
    "matplotlib==3.10.5"
]
devtools = [
    "tqdm==4.67.1"
]
groundwater-illustration-matching = [
    "scikit-image==0.25.2"
]
deep-learning = [
    "transformers==4.55.2",
    "datasets==4.0.0",
    "torch==2.8.0",
    "accelerate==1.10.0",
]

all = ["swissgeol-boreholes-dataextraction[test, lint, experiment-tracking, visualize, devtools, groundwater-illustration-matching, deep-learning]"]

[project.scripts]
boreholes-extract-all = "extraction.main:click_pipeline"
boreholes-extract-metadata = "extraction.main:click_pipeline_metadata"
boreholes-download-profiles = "scripts.get_files:download_directory_froms3"
boreholes-score = "extraction.evaluation.benchmark.score:main"
boreholes-classify-descriptions = "classification.main:click_pipeline"
fine-tune-bert = "classification.models.train:train_model"

[tool.ruff.lint]
select = [
    # pydocstyle
    "D",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    "D102",  # Missing docstring in a public method
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in `__init__`
    ]

[tool.ruff]
line-length = 119

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
# Some deprecation warnings come from external libraries (botocore and SWIG). Since we canâ€™t fix these in our code,
# they are now ignored during test runs to keep the output clean. Link to the existing issues:
# SWIG: https://github.com/pymupdf/PyMuPDF/issues/3931
# boto3: https://github.com/boto/boto3/issues/3889
filterwarnings = [
    "ignore:.*Swig.*has no __module__ attribute:DeprecationWarning",
    "ignore:datetime.datetime.utcnow:DeprecationWarning:botocore"
]